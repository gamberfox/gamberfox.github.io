
let state1:number[][][]=[
    [[ 1, 8 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
    [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
    [[ 2, 2 ], [ 0, 0 ],[ 1, 9 ], [ 2, 2 ],[ 1, 4 ], [ 3, 0 ],[ 0, 0 ], [ 1, 10 ]],
    [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
    [[ 0, 0 ], [ 4, 0 ],[ 1, 5 ], [ 1, 6 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
    [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 1, 2 ], [ 0, 0 ]],
    [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 1, 7 ],[ 0, 0 ], [ 1, 1 ]],
    [[ 0, 0 ], [ 2, 2 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 2, 2 ], [ 1, 3 ]]
  ];
let pos1:number[][]=[[2,5],[4,1]];

let state2:number[][][]=[
  [[2,2],[2,2],[0,0],[0,0],[0,0],[0,0],[0,0],[1,6]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 3, 0 ],[ 1, 5 ], [ 1, 7 ],[ 1, 4 ], [ 1, 2 ]],
  [[ 0, 0 ], [ 1, 1 ],[ 0, 0 ], [ 1, 3 ],[ 0, 0 ], [ 2, 2 ],[ 1, 8 ], [ 1, 2 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 1, 9 ],[ 0, 0 ], [ 1, 10 ],[ 0, 0 ], [ 0, 0 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 4, 0 ],[ 0, 0 ], [ 2, 2 ],[ 0, 0 ], [ 0, 0 ]],
]


let state3:number[][][]=[
  [[0,0], [0,0], [0,0], [0,0], [0,0], [1,3], [0,0], [4,0]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 3, 0 ],[ 1, 5 ], [ 1, 7 ],[ 1, 4 ], [ 1, 2 ]],
  [[ 0, 0 ], [ 1, 1 ],[ 0, 0 ], [ 1, 3 ],[ 0, 0 ], [ 2, 2 ],[ 1, 8 ], [ 1, 2 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 0, 0 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 1, 9 ],[ 0, 0 ], [ 1, 10 ],[ 0, 0 ], [ 0, 0 ]],
  [[ 0, 0 ], [ 0, 0 ],[ 0, 0 ], [ 4, 0 ],[ 0, 0 ], [ 2, 2 ],[ 0, 0 ], [ 0, 0 ]],
]
// ['[0,0]', '[0,0]', '[0,0]', '[0,0]', '[0,0]', '[1,3]', '[0,0]', '[4,0]']
// ['[0,0]', '[0,0]', '[0,0]', '[0,0]', '[2,2]', '[0,0]', '[0,0]', '[1,4]']
// ['[2,2]', '[0,0]', '[0,0]', '[0,0]', '[0,0]', '[0,0]', '[0,0]', '[0,0]']
// ['[0,0]', '[0,0]', '[0,0]', '[0,0]', '[2,2]', '[2,2]', '[0,0]', '[0,0]']
// Â ['[1,5]', '[0,0]', '[0,0]', '[0,0]', '[0,0]', '[0,0]', '[0,0]', '[0,0]']
// ['[3,0]', '[0,0]', '[0,0]', '[0,0]', '[1,1]', '[0,0]', '[0,0]', '[0,0]']
// ['[0,0]', '[0,0]', '[0,0]', '[0,0]', '[1,6]', '[1,7]', '[0,0]', '[0,0]']
// ['[1,10]', '[0,0]', '[1,8]', '[0,0]', '[0,0]', '[0,0]', '[1,9]', '[1,2]']

// stuck test
let state5:number[][][]=[
  [[1,4],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1,8],],
  [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],],
  [[0,0],[0,0],[1,1],[0,0],[0,0],[1,10],[0,0],[4,0],],
  [[0,0],[0,0],[0,0],[0,0],[0,0],[1,6],[0,0],[2,2],],
  [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[2,2],[2,2],],
  [[0,0],[0,0],[0,0],[0,0],[2,2],[1,2],[0,0],[1,3],],
  [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],],
  [[0,0],[0,0],[3,0],[1,7],[0,0],[1,9],[0,0],[1,5],],
];
let pos5:number[][]=[[7,2],[2,7]];



// let test1:Board=new Board();

// console.log(test1.getBoardState());

//the last part of the generateButton function has tests set up
// minimax(board,true,0,0);

// await this.delay(this.difficulty);